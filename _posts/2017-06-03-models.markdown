---
layout: post
title: 04 Models
date: 2017-06-03 ds 05:29
description: Models
keywords: models
coments: true
---

Anem a utilitzar el primer generador de Ruby on Rails

    rails generate model Article title:strings body:text visit_count:integer 

Output

      Running via Spring preloader in process 25314
      invoke  active_record
      create    db/migrate/20170603024931_create_articles.rb
      create    app/models/article.rb
      invoke    test_unit
      create      test/models/article_test.rb
      create      test/fixtures/articles.yml


Els generadors es criden amb el nom `generate` + `nom_del_model_en_singular`.

Hi ha diferents tipus de generadors:

- Controler
- Model
- Migration

Rails espera que el **nom del model** es declare en sigular i generarà una **tabla** amb el mateix model, però en **plural**. Així, si anomenem al model `Article`, la tabla s'anomenarà `Articles`.

Cal utilitzar noms en anglés, perquè Rails utilitzarà la paraula en anglés.

Després de generador anem a indicar els **camps** de la taula. Amb dos punts separarem el tipus de dades en la base de dades. Quan creem una taula hem d'especificar el tipus de dada que es va a guardar en eixe camp.

Per defecte, Rails, va a especificar el `var_char`, això vol dir que si no especifiquem, doncs ell va a intentar endevinar què és, és a dir si escrivim `title` ens posarà com a tipus de dada `string`, per defecte serà una cadena.

El segon camp `body` l'especifiquem com `text`, ja que va a ser una cadena molt llarga.

Els camps es poden escriure en l'idioma que desitgem, però la tabla és millor que la escrivim en anglés.

S'ha creat un arxiu anomenat `Article` dins del directori `app/models/`.

No vàrem d'haver especificat a Rails:

- Tabla => articles
- Camps => article.title() => 'Títol de l'artícle'
- Escriure mètodes

